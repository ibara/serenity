--- nano-4.9.2/src/isctype.c.orig	Sun May 10 17:41:35 2020
+++ nano-4.9.2/src/isctype.c	Sun May 10 17:43:58 2020
@@ -0,0 +1,62 @@
+#include <ctype.h>
+
+#undef isalnum
+#undef iscntrl
+#undef islower
+#undef isspace
+#undef isalpha
+#undef isdigit
+#undef isprint
+#undef isupper
+#undef isblank
+#undef isgraph
+#undef ispunct
+#undef isxdigit
+
+int isalnum(int c) {
+	return (_ctype_[(int)(c)] & (_U | _L | _N));
+}
+
+int iscntrl(int c) {
+	return (_ctype_[(int)(c)] & (_C));
+}
+
+int islower(int c) {
+	return ((_ctype_[(int)(c)] & (_U | _L)) == _L);
+}
+
+int isspace(int c) {
+	return (_ctype_[(int)(c)] & (_S));
+}
+
+int isalpha(int c) {
+	return (_ctype_[(int)(c)] & (_U | _L));
+}
+
+int isdigit(int c) {
+	return (_ctype_[(int)(c)] & (_N));
+}
+
+int isprint(int c) {
+	return (_ctype_[(int)(c)] & (_P | _U | _L | _N | _B));
+}
+
+int isupper(int c) {
+	return ((_ctype_[(int)(c)] & (_U | _L)) == _U);
+}
+
+int isblank(int c) {
+	return (c == ' ' || c == '\t');
+}
+
+int isgraph(int c) {
+	return (_ctype_[(int)(c)] & (_P | _U | _L | _N));
+}
+
+int ispunct(int c) {
+	return (_ctype_[(int)(c)] & (_P));
+}
+
+int isxdigit(int c) {
+	return (_ctype_[(int)(c)] & (_N | _X));
+}
